on:
  workflow_call:
    inputs:
      source-directory:
        type: string
        description: Directory containing the main source of the project. Usually force-app, but can be something else. This is used to determine which entry in packageDirectories in sfdx-project.json is the main one. Defaults to force-app.
        required: false
        default: force-app
      run-tests:
        type: string
        description: whether to run the unit tests in source-directory when deploying the code in source-directory. Set to anything other than "yes" to not run tests.
        required: false
        default: yes
      instance-url:
        type: string
        description: Salesforce instance URL to log in to as Dev Hub org
        required: false
        default: https://login.salesforce.com
      client-id:
        type: string
        description: OAuth client ID (sometimes called consumer key) of the connected app on Salesforce used to connect to the Dev Hub org
        required: false
        default: TODO
      jwt-key-encrypted:
        type: string
        description: Ansible Vault-encrypted private key to connect to the Dev Hub org with using the JWT flow (this should be encrypted using ansible-vault encrypt, NOT ansible-vault encrypt_string!)
        required: false
        default: |
          $ANSIBLE_VAULT;1.1;AES256
          63333237653234636464353339353265666464356231383466303335663331613765613065383235
          3839326236626639346138383036323731633161653038330a316139386634646165633465646131
          62373832303265363064653038316166646439333661633162306533313235646437653965333530
          3738366533323636620a336434353463333565666336636331336433303961363734376338386265
          37323836666334306535396433393664353631663162343738303335393230626566663830663038
          63386663646563396366633463653933653166613964656638353037336638363230336235323535
          34303030633530636532306531626164656337646331633434373162353662313036313830303538
          35333435323663363561303131653239323835306264616161323136663732306334616232333263
          62373264633930326434663264366166323137636136333235646432333765343239663233656438
          39303935386663646463316333633338653834653732663034613234653365633263656138316530
          33343635616331666439383232363534323665386130633233353365646137623063366634393539
          35663934666638396537353139656536633437393438333033653438613839386134626238613233
          33386539353435333334613130326636303063333463313135313732323832626139623430633563
          63363931356438343736346633346562316534396661346466313530656335383165653163313436
          30613632363337363166333530386561356138656462386339626333306130643535373062346538
          33396465393164646465393262363231663962626664643439623839646236646235646231313538
          64613063313266343633356138396164636466626662653137626365613135613432653162303862
          61303639386563643861636432323330396666333531343730633766323466636637643831356632
          33393062623039333630643762396537353362626132623835383333326164363630336533636135
          38623832663165646136363463663531353361373534623431303134343536376462313833363463
          36373935633433396538646233613635366339343163363365626133666531376435306464343133
          39363638346433613334373731393763303334336463623064633162373831313736643832393531
          39363065616537663633386432396133623036303034656361303033306332373331303936366535
          39623465656436333764393431663436643835393361613730333235303336393333636137343333
          35343437623033623938633065623630356163623062343538626537343565373839616262363831
          62376132306437353763376463343431646437313636356339396162363932343263663134343133
          62303135633634653234376231393930643835346361653336343237346563623738316630646538
          62326562356436373066343934363231383332643434333832313565376165386464316464383638
          62373863383330363438333765306532616562346133343537323939323233396463643035353266
          34376665323433323562323034396634653866613633356565656465353935333732633662373630
          33666330336162363965313437386238643431643439303965353230316234386433366566653238
          39613834613662346563393232383939613137343836383330623966343462383338393039366439
          38306434353561613439386562343537343336613631396337303038343534313661323565356431
          62636261653332633566626637353561636130323063303963646563633339653065306363653737
          38393738663963646465636161356538303830396432333865373038356563306431643438383763
          34396664653764313865353734386533336639356230353236653931323461363337303732336362
          35313534333532373330386233653134626431343336393135303230343330646437643065363737
          35643232633835653436346163643634616262333739633765656531336265666563343934666534
          66323934363534396237313936643234303332323434656361383733653663343065623433323439
          38326166343438303834656436646365353235303336303338636431353938386335346434353139
          65643231613362313739383133636135343632316332346166636436353930633732396130383039
          37353837356232666232306334666130616663376235623837353437323730616462626331316165
          38396563643432323764363163306137653037313432346161623730383534373331663639323937
          31336433376536336462653263613834366533626561303164333833386461363463613036373333
          32653737663766366464363733646236303834323434373133646536316635353562643739313165
          30336263656238383735653063393262313335383739613761303765396635633064386532656530
          35313066393232363462613839666233333138376566343266653132666435663336373235323533
          33393439353962316638336364366563373133343865623337326130356432366230333234326663
          31306563633062316138376339303537353635373034653538613638393366623562616232333437
          64373962333832326561613933373331383134363566323430323566386130353536643161653936
          36353932626237306565613738353234346535663635616665666432383739393933326365653934
          35366430656334626431333064323336333136363739343466353933643030316263653135316262
          62663962663561633633643630376461383832316230393563333432316131633263666536383535
          65323338316563616261613335613639653936366535333638666432306162653336316561313634
          39316361363536663632626530353162626432663230363830353734383331623630636533653436
          34653862353037666336373661666662303535373764633935336566393061656631393335316262
          38366565336238643536633839633932373332663631356431386131646338393261373364306331
          34346564393563336630643466613935313035303361386330376437653066336332666163626530
          32643933303362373337333831613136633839333730306464383464343832666137393963393861
          34643830353032393738323232383138393035643834366564333131383964343365303934343238
          39373539343230346238396138623831376236333536653437616430633238613231343962316631
          64373331646366383932373761353633333537623363333935386161336363663461333962643636
          33393237636335616562363263663330356665646261363632393639656462336136353661366332
          39656235653932386464393631616338313430666565326638383365313163616464333336396439
          39353465323662373839383465323638343330623464393161613265616434353933353763643764
          61646531363366386439306535356564616433346135643061653537323132393436616663633966
          35646535646531313735613865636437643265663730343166353731636436666638623732643737
          66303237353665656361396231626530323036313032636137363462393138333562623938353337
          38666461333038383263666432333162396535336335653430336564623061353834323738366562
          64653535376462366166616133303066633437333961356331363437363437323135316638376639
          63323463383236323338643164613364303862656533313332316230303735666165623564623562
          37393561616539363565656463666436376163313130353165653637636336643332613633663739
          31306334613434616362376163636163306564393765636638373332306236633466636666643537
          62306434336661653162353730336638326364646230313164303363386162626230323565633062
          63303065623932663232366135636639373333666562313938346664356263306131313461663264
          37646130636337313433373166613565313938376434633733386563343865646163363334303961
          64613331386462366662616632363634303266366433363037376339333038306465613939623531
          38313334353463393736353861313062343834373034356630333734306632616136333834333831
          33623365356239343637366234613862366465306466366565313131343864386561663864666466
          66376630623632656636326532383466653666306130346464616133336536346366616333323266
          30613761303538366430636632623438616231316561636333356438326334306163336666383464
          62666234393635613431343164336133316335323037356561636236636339663836346138396463
          30383933613433346461623434353866633631636631343662313839303337636466623738623464
          39653765366532626539343437633638383436326666343932303634663166346435323561393264
          34396333343335353162663165663537666337366464343765616435336339316435653866316333
          39306565616337313530333335373833326630353663623333623931313235323533373234636533
          31616436343031653265663661323737663765336437613934663637336538326335366334306639
          63666637666637323738616436613130623330666663323236306237366230363965353962663865
          61343033613731346362333664666138386465373461353465376530353835333865376436353239
          64653262666433666166386164323162623235333638393963383633376566623366656164663463
          326236333339376564383862656239643863
      username:
        type: string
        description: Username of Salesforce user to authenticate as on the Dev Hub org; must have permission to create scratch orgs
        required: false
        default: classactionsadmin@wtax.co
    secrets:
      ansible-vault-password:
        description: Password to be used to decrypt the `jwt-key-encrypted` and `texei-installation-keys`.
        required: true
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: check out code
        uses: actions/checkout@v4

      - name: install jq
        run: sudo apt-get install -y jq

      - name: install ccrypt
        run: sudo apt-get install -y ccrypt

      - name: set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18.x

      - name: write encrypted JWT key to file
        run: echo '${{ inputs.jwt-key-encrypted }}' >.jwt-key

      - name: write Ansible Vault password to file
        run: echo "${{ secrets.ansible-vault-password }}" >.vault-password

      - name: decrypt the private key for the Continuous Integration connected app
        run: ansible-vault decrypt --vault-password-file=.vault-password .jwt-key

      - name: install Salesforce CLI
        run: npm list -g @salesforce/cli || npm install -g @salesforce/cli

      - name: create unsigned plugin allowlist
        run: |
          mkdir -p $HOME/.config/sf
          echo '[ "@dxatscale/sfpowerscripts", "texei-sfdx-plugin" ]' > $HOME/.config/sf/unsignedPluginAllowList.json

      - name: install sfpowerscripts plugin
        run: sf plugins install @dxatscale/sfpowerscripts

      - name: install texei plugin
        run: sf plugins install texei-sfdx-plugin

      - name: connect to Dev Hub
        run: |
          sf auth jwt grant \
              --client-id="${{ inputs.client-id }}" \
              --jwt-key-file=.jwt-key \
              --instance-url="${{ inputs.instance-url }}" \
              --username="${{ inputs.username }}" \
              --set-default-dev-hub \
              --alias dev-hub

      - name: create scratch org
        run: sf org create scratch -w 15 -f config/project-scratch-def.json -d -y 1 --set-default --alias scratch-org

      - name: write encrypted installation keys to file
        run: echo '${{ inputs.texei-installation-keys-encrypted }}' >texei-installation-keys.txt
        if: ${{ inputs.texei-installation-keys-encrypted != '' }}

      - name: tell GitHub Actions to mask the installation keys in the log
        run: echo "::add-mask::$(ansible-vault decrypt --vault-password-file=.vault-password --output - texei-installation-keys.txt)"
        if: ${{ inputs.texei-installation-keys-encrypted != '' }}

      - name: decrypt the installation keys
        run: echo "texei_installation_keys_decrypted="$(ansible-vault decrypt --vault-password-file=.vault-password --output - texei-installation-keys.txt) >>$GITHUB_ENV
        if: ${{ inputs.texei-installation-keys-encrypted != '' }}

      - name: create installation key string from packageInstallationKeys section in sfdx-project.json
        id: installationkeys
        run: |
          echo -n "installationkeys=">$GITHUB_OUTPUT
          cat sfdx-project.json | jq -r '.packageInstallationKeys|to_entries[]|[.key,.value]|@tsv'| \
          while read line; do
            eval `echo "$line"|awk '{print "package="$1" encrypted_key="$2}'`
            eval `echo $encrypted_key|awk -F: '{print "encryption_method="$1" encrypted_key="$2}'`
            case $encryption_method in
              ccrypt)
                installation_key=`echo "$encrypted_key" | base64 --decode | ccat -k .vault-password`
                ;;
              plain)
                installation_key="$encrypted_key"
                ;;
              *)
                if [ "x$encrypted_key" == "x" ]; then
                  # No encrypted key means there was no colon so key was plain text and encryption_method is actually the installation key
                  installation_key="$encryption_method"
                else
                  echo "Unsupported encryption method '$encryption_method' for package $package"
                  exit 3
                fi
                ;;
            esac
            echo -n "$package:$installation_key "
          done >>$GITHUB_OUTPUT

      - name: install dependencies using sfpowerscripts
        run: sf dependency install -u scratch-org -v dev-hub --installationkeys "${{ steps.installationkeys.outputs.installationkeys }}"
        if: ${{ inputs.texei-installation-keys-encrypted == ''}}

      - name: install dependencies (with installation keys)
        run: sf texei package dependencies install -w 15 -r --installationkeys="${texei_installation_keys_decrypted}"
        if: ${{ inputs.texei-installation-keys-encrypted != '' }}

      - name: run scripts
        run: test -d scripts/build-hooks/pre-test && for file in scripts/build-hooks/pre-test/*.apex; do sfdx apex run -f "$file"; done || echo "No pre-test scripts to run."

      - name: push sources to scratch org and run tests for source-directory
        run: |
          set -o pipefail
          jq -r '.packageDirectories[].path' < sfdx-project.json | \
          while read path; do
            if [ $(find ${path} -name '*-meta.xml'|wc -l) -eq 0 ]; then
              echo Skipping empty package directory ${path}
            else
              if [ "${path}" == "${{ inputs.source-directory }}" -a "${{ inputs.run-tests }}" == "yes" ]; then
                testflags=$(find ${path}/test -name '*.cls' | \
                  while read test; do
                    echo -n "${testflags} ${test}"
                  done)
                sf project deploy start --source-dir $path --ignore-conflicts --test-level=RunSpecifiedTests ${testflags}
              else
                sf project deploy start --source-dir $path --ignore-conflicts
              fi
            fi
          done

      - name: package the source as metadata
        run: |
          mkdir -p "target/${{ github.event.repository.name }}-${{ github.sha }}"
          sf project convert source --source-dir "${{ inputs.source-directory }}" --output-dir="target/${{ github.event.repository.name }}-${{ github.sha }}"

      - name: archive artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.repository.name }}-${{ github.sha }}
          path: target/${{ github.event.repository.name }}-${{ github.sha }}

      - name: delete scratch org
        run: sf org delete scratch -p
        if: always()
